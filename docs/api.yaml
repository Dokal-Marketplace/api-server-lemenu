swagger: '2.0'
info:
  title: CartaAI Restaurant Management API
  description: Comprehensive API for managing a restaurant platform, including menu, orders, staff, and delivery.
  version: 1.0.0
host: ssgg.api.cartaai.pe
schemes:
  - https
basePath: /api/v1
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []

paths:
  /auth/login:
    post:
      summary: Login to the API
      description: Authenticates a user and returns an access token.
      tags:
        - Authentication
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: Login successful
          schema:
            $ref: '#/definitions/LoginResponse'
  /user:
    get:
      summary: Get User Profile
      tags:
        - Authentication
      description: Retrieves the current user's profile information.
      security:
        - Bearer: []
      responses:
        '200':
          description: User profile retrieved successfully
  /user-business/get-by-user-id/{userId}:
    get:
      summary: Get User Businesses
      description: Retrieves a list of businesses associated with a user.
      tags:
        - Authentication
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Businesses retrieved successfully
  /business:
    get:
      summary: Get Business Information
      description: Retrieves information about a specific business using subdomain and local ID.
      tags:
        - Business Management
      parameters:
        - name: subDomain
          in: query
          required: true
          type: string
        - name: localId
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Business information retrieved successfully
    post:
      summary: Create New Business
      description: Creates a new business.
      tags:
        - Business Management
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              address:
                type: string
              settings:
                type: object
      responses:
        '201':
          description: Business created successfully
  /business/update/{subDomain}/{localId}:
    patch:
      summary: Update Business Settings
      description: Updates the settings for a specific business.
      tags:
        - Business Management
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Business settings updated successfully
  /business/v2/create-complete:
    post:
      summary: Create Complete Business Setup
      description: Creates a new business with a complete setup.
      tags:
        - Business Management
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '201':
          description: Business setup created successfully
  /business/new-local:
    post:
      summary: Add New Local/Branch
      description: Adds a new local branch to an existing business.
      tags:
        - Business Management
      security:
        - Bearer: []
      responses:
        '201':
          description: New local added successfully
  /business/locals/{subDomain}:
    get:
      summary: Get All Locals for Subdomain
      description: Retrieves all local branches for a given business subdomain.
      tags:
        - Business Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Locals retrieved successfully
  /business/{subDomain}/{localId}/status:
    patch:
      summary: Update Business Status
      description: Updates the status of a specific business location.
      tags:
        - Business Management
      consumes:
        - application/json
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - open
                  - closed
      responses:
        '200':
          description: Business status updated successfully
  /business/admin/businesses:
    get:
      summary: Get All Businesses (Admin)
      description: Retrieves all businesses (for admin users).
      tags:
        - Business Management
      security:
        - Bearer: []
      responses:
        '200':
          description: Businesses retrieved successfully
  /categories/get-all/{subDomain}/{localId}:
    get:
      summary: Get All Categories
      description: Retrieves all menu categories for a specific business location.
      tags:
        - Menu Management
        - Categories
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Categories retrieved successfully
  /categories:
    post:
      summary: Create Category
      description: Creates a new menu category.
      tags:
        - Menu Management
        - Categories
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              position:
                type: number
      responses:
        '201':
          description: Category created successfully
  /categories/{categoryId}:
    patch:
      summary: Update Category
      description: Updates an existing menu category.
      tags:
        - Menu Management
        - Categories
      consumes:
        - application/json
      parameters:
        - name: categoryId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Category updated successfully
    delete:
      summary: Delete Category
      description: Deletes a menu category by its ID.
      tags:
        - Menu Management
        - Categories
      parameters:
        - name: categoryId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Category deleted successfully
  /productos/get-all/{subDomain}/{localId}:
    get:
      summary: Get All Products
      description: Retrieves all menu products for a specific business location.
      tags:
        - Menu Management
        - Products
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Products retrieved successfully
  /productos/{subDomain}/{localId}:
    post:
      summary: Create Product
      description: Creates a new menu product.
      tags:
        - Menu Management
        - Products
      consumes:
        - application/json
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              price:
                type: number
              categoryId:
                type: string
              description:
                type: string
      responses:
        '201':
          description: Product created successfully
  /productos/with-presentation/{subDomain}/{localId}:
    post:
      summary: Create Product with Presentation
      description: Creates a new product including its presentations.
      tags:
        - Menu Management
        - Products
        - Presentations
      consumes:
        - application/json
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '201':
          description: Product with presentation created successfully
  /productos/{productId}:
    patch:
      summary: Update Product
      description: Updates an existing menu product.
      tags:
        - Menu Management
        - Products
      consumes:
        - application/json
      parameters:
        - name: productId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Product updated successfully
    delete:
      summary: Delete Product
      description: Deletes a menu product by its ID.
      tags:
        - Menu Management
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Product deleted successfully
  /productos/convert-to-modifier:
    post:
      summary: Convert Product to Modifier
      description: Converts an existing product into a modifier.
      tags:
        - Menu Management
        - Products
        - Modifiers
      consumes:
        - application/json
      responses:
        '200':
          description: Product converted to modifier successfully
  /modificadores/get-all:
    get:
      summary: Get All Modifiers
      description: Retrieves all modifiers.
      tags:
        - Menu Management
        - Modifiers
      security:
        - Bearer: []
      responses:
        '200':
          description: Modifiers retrieved successfully
  /modificadores/create:
    post:
      summary: Create Modifier
      description: Creates a new modifier.
      tags:
        - Menu Management
        - Modifiers
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '201':
          description: Modifier created successfully
  /modificadores:
    patch:
      summary: Update Modifier
      description: Updates an existing modifier.
      tags:
        - Menu Management
        - Modifiers
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Modifier updated successfully
    delete:
      summary: Delete Modifier
      description: Deletes a modifier.
      tags:
        - Menu Management
        - Modifiers
      security:
        - Bearer: []
      responses:
        '204':
          description: Modifier deleted successfully
  /modificador-items:
    post:
      summary: Create Modifier Item
      description: Creates a new item for a modifier.
      tags:
        - Menu Management
        - Modifier Items
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '201':
          description: Modifier item created successfully
    patch:
      summary: Update Modifier Item
      description: Updates an existing modifier item.
      tags:
        - Menu Management
        - Modifier Items
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Modifier item updated successfully
    delete:
      summary: Delete Modifier Item
      description: Deletes a modifier item.
      tags:
        - Menu Management
        - Modifier Items
      security:
        - Bearer: []
      responses:
        '204':
          description: Modifier item deleted successfully
  /presentaciones/get-all/{subDomain}/{localId}:
    get:
      summary: Get All Presentations
      description: Retrieves all presentations for a specific business location.
      tags:
        - Menu Management
        - Presentations
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Presentations retrieved successfully
  /presentaciones:
    post:
      summary: Create Presentation
      description: Creates a new product presentation.
      tags:
        - Menu Management
        - Presentations
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '201':
          description: Presentation created successfully
  /presentaciones/{presentationId}:
    patch:
      summary: Update Presentation
      description: Updates an existing product presentation.
      tags:
        - Menu Management
        - Presentations
      consumes:
        - application/json
      parameters:
        - name: presentationId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Presentation updated successfully
    delete:
      summary: Delete Presentation
      description: Deletes a product presentation by its ID.
      tags:
        - Menu Management
        - Presentations
      parameters:
        - name: presentationId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Presentation deleted successfully
  /menu/getProductInMenu/{localId}/{subDomain}:
    post:
      summary: Get Product Details in Menu
      description: Retrieves details for specified products within a menu.
      tags:
        - Menu Management
        - Menu Integration
      consumes:
        - application/json
      parameters:
        - name: localId
          in: path
          required: true
          type: string
        - name: subDomain
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Product details retrieved successfully
  /menu2/v2/integration/{subDomain}:
    get:
      summary: Get Menu Integration Data
      description: Retrieves complete menu integration data for a subdomain.
      tags:
        - Menu Management
        - Menu Integration
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Menu integration data retrieved successfully
  /menu2/integration/{subDomain}/{localId}:
    get:
      summary: Get Menu Integration for Local
      description: Retrieves complete menu integration data for a specific local.
      tags:
        - Menu Management
        - Menu Integration
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Menu integration data for local retrieved successfully
  /menu2/update-multiple-local/{itemType}/{rId}:
    post:
      summary: Update Multiple Local Items
      description: Updates multiple items (e.g., products, categories) at a specific local.
      tags:
        - Menu Management
        - Menu Integration
      consumes:
        - application/json
      parameters:
        - name: itemType
          in: path
          required: true
          type: string
        - name: rId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
      responses:
        '200':
          description: Items updated successfully
  /order/filled-orders/{subDomain}/{localId}:
    get:
      summary: Get Orders for Restaurant
      description: Retrieves all orders for a specific restaurant location.
      tags:
        - Order Management
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: status
          in: query
          required: false
          type: string
          enum: ['pending', 'confirmed', 'preparing', 'ready', 'dispatched', 'delivered', 'cancelled', 'rejected']
        - name: limit
          in: query
          required: false
          type: integer
          default: 50
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
      responses:
        '200':
          description: Orders retrieved successfully
          schema:
            type: object
            properties:
              type:
                type: string
                example: "1"
              message:
                type: string
                example: "Orders retrieved successfully"
              data:
                type: array
                items:
                  $ref: '#/definitions/Order'
  /order/filled-orders/admin:
    get:
      summary: Get Orders for Admin (Paginated)
      description: Retrieves paginated orders for administrative purposes.
      tags:
        - Order Management
      parameters:
        - name: page
          in: query
          required: true
          type: integer
          minimum: 1
        - name: limit
          in: query
          required: true
          type: integer
          minimum: 1
          maximum: 100
        - name: startDate
          in: query
          required: true
          type: string
          format: date
        - name: endDate
          in: query
          required: true
          type: string
          format: date
        - name: status
          in: query
          required: false
          type: string
          enum: ['pending', 'confirmed', 'preparing', 'ready', 'dispatched', 'delivered', 'cancelled', 'rejected']
        - name: source
          in: query
          required: false
          type: string
          enum: ['digital_menu', 'whatsapp', 'phone', 'pos', 'website']
      responses:
        '200':
          description: Paginated orders retrieved successfully
          schema:
            type: object
            properties:
              type:
                type: string
                example: "1"
              message:
                type: string
                example: "Paginated orders retrieved successfully"
              data:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/definitions/Order'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      totalPages:
                        type: integer
  /order/get-order/{orderId}:
    get:
      summary: Get Specific Order
      description: Retrieves details for a single order by its ID.
      tags:
        - Order Management
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Order retrieved successfully
          schema:
            type: object
            properties:
              type:
                type: string
                example: "1"
              message:
                type: string
                example: "Order retrieved successfully"
              data:
                $ref: '#/definitions/Order'
        '404':
          description: Order not found
          schema:
            type: object
            properties:
              type:
                type: string
                example: "3"
              message:
                type: string
                example: "Order not found"
              data:
                type: null
  /order/{orderId}/status:
    patch:
      summary: Update Order Status
      description: Updates the status of a specific order.
      tags:
        - Order Management
      consumes:
        - application/json
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateOrderStatusRequest'
      responses:
        '200':
          description: Order status updated successfully
          schema:
            type: object
            properties:
              type:
                type: string
                example: "1"
              message:
                type: string
                example: "Order status updated successfully"
              data:
                $ref: '#/definitions/Order'
        '404':
          description: Order not found
          schema:
            type: object
            properties:
              type:
                type: string
                example: "3"
              message:
                type: string
                example: "Order not found"
              data:
                type: null
  /order/{orderId}/toggle-archived:
    patch:
      summary: Toggle Order Archived Status
      description: Toggles the archived status of an order.
      tags:
        - Order Management
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Order archived status toggled successfully
  /order/archived/{subDomain}/{localId}:
    get:
      summary: Get Archived Orders
      description: Retrieves archived orders for a specific restaurant location.
      tags:
        - Order Management
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Archived orders retrieved successfully
  /order/change-status/{subDomain}/{localId}:
    post:
      summary: Configure Auto Status Change
      description: Configures automatic order status changes for a specific restaurant location.
      tags:
        - Order Management
      consumes:
        - application/json
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              isActive:
                type: boolean
              intervalTime:
                type: number
      responses:
        '200':
          description: Auto status change configured successfully
  /delivery/companies:
    get:
      summary: Get All Delivery Companies
      description: Retrieves all delivery companies.
      tags:
        - Delivery Management
        - Companies
      responses:
        '200':
          description: Companies retrieved successfully
    post:
      summary: Create Delivery Company
      description: Creates a new delivery company.
      tags:
        - Delivery Management
        - Companies
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              contact:
                type: string
              subDomain:
                type: string
              localId:
                type: string
      responses:
        '201':
          description: Company created successfully
  /delivery/companies/restaurant/{subDomain}/{localId}:
    get:
      summary: Get Companies for Restaurant
      description: Retrieves delivery companies linked to a specific restaurant.
      tags:
        - Delivery Management
        - Companies
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Companies retrieved successfully
  /delivery/companies/{companyId}:
    patch:
      summary: Update Delivery Company
      description: Updates an existing delivery company.
      tags:
        - Delivery Management
        - Companies
      consumes:
        - application/json
      parameters:
        - name: companyId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Company updated successfully
    delete:
      summary: Delete Delivery Company
      description: Deletes a delivery company by its ID.
      tags:
        - Delivery Management
        - Companies
      parameters:
        - name: companyId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Company deleted successfully
  /delivery/companies/link:
    post:
      summary: Link Company to Restaurant
      description: Links a delivery company to a restaurant location.
      tags:
        - Delivery Management
        - Companies
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              companyId:
                type: string
              subDomain:
                type: string
              localId:
                type: string
      responses:
        '200':
          description: Company linked successfully
  /delivery/companies/unlink:
    delete:
      summary: Unlink Company from Restaurant
      description: Unlinks a delivery company from a restaurant location.
      tags:
        - Delivery Management
        - Companies
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              companyId:
                type: string
              subDomain:
                type: string
              localId:
                type: string
      responses:
        '200':
          description: Company unlinked successfully
  /delivery/drivers:
    get:
      summary: Get All Drivers
      description: Retrieves all delivery drivers.
      tags:
        - Delivery Management
        - Drivers
      responses:
        '200':
          description: Drivers retrieved successfully
    post:
      summary: Create Driver
      description: Creates a new delivery driver.
      tags:
        - Delivery Management
        - Drivers
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              phone:
                type: string
              vehicle:
                type: string
              subDomain:
                type: string
              localIds:
                type: array
                items:
                  type: string
      responses:
        '201':
          description: Driver created successfully
  /delivery/drivers/restaurant/{subDomain}/{localId}:
    get:
      summary: Get Drivers for Restaurant
      description: Retrieves drivers linked to a specific restaurant.
      tags:
        - Delivery Management
        - Drivers
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Drivers retrieved successfully
  /delivery/drivers/company/{companyId}:
    get:
      summary: Get Drivers by Company
      description: Retrieves drivers belonging to a specific company.
      tags:
        - Delivery Management
        - Drivers
        - Companies
      parameters:
        - name: companyId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Drivers retrieved successfully
  /delivery/drivers/{driverId}:
    patch:
      summary: Update Driver
      description: Updates an existing delivery driver.
      tags:
        - Delivery Management
        - Drivers
      consumes:
        - application/json
      parameters:
        - name: driverId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Driver updated successfully
    delete:
      summary: Delete Driver
      description: Deletes a delivery driver by its ID.
      tags:
        - Delivery Management
        - Drivers
      parameters:
        - name: driverId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Driver deleted successfully
  /delivery/drivers/link:
    post:
      summary: Link Driver to Restaurant
      description: Links a delivery driver to one or more restaurant locations.
      tags:
        - Delivery Management
        - Drivers
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              driverId:
                type: string
              subDomain:
                type: string
              localIds:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Driver linked successfully
  /delivery/drivers/unlink:
    delete:
      summary: Unlink Driver from Restaurant
      description: Unlinks a delivery driver from one or more restaurant locations.
      tags:
        - Delivery Management
        - Drivers
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              driverId:
                type: string
              subDomain:
                type: string
              localIds:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Driver unlinked successfully
  /delivery/drivers/{driverId}/local/{localId}:
    post:
      summary: Assign Driver to Local
      description: Assigns a specific driver to a specific local.
      tags:
        - Delivery Management
        - Drivers
      consumes:
        - application/json
      parameters:
        - name: driverId
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              subDomain:
                type: string
      responses:
        '200':
          description: Driver assigned to local successfully
  /staff/roles/{subDomain}/{localId}:
    get:
      summary: Get Available Roles
      description: Retrieves a list of available staff roles.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Roles retrieved successfully
    post:
      summary: Create Role
      description: Creates a new staff role.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      responses:
        '201':
          description: Role created successfully
  /staff/{subDomain}/{localId}:
    get:
      summary: Get Staff by Local
      description: Retrieves all staff members for a specific local.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Staff retrieved successfully
    post:
      summary: Create Staff Member
      description: Creates a new staff member.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      responses:
        '201':
          description: Staff member created successfully
  /staff/{subDomain}/{localId}/search:
    get:
      summary: Search Staff
      description: Searches for staff members.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Staff search results retrieved successfully
  /staff/{subDomain}/{localId}/stats:
    get:
      summary: Get Staff Statistics
      description: Retrieves staff statistics for a local.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Staff statistics retrieved successfully
  /staff/{subDomain}/{localId}/staff/{staffId}:
    get:
      summary: Get Staff by ID
      description: Retrieves a specific staff member by ID.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: staffId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Staff member retrieved successfully
    put:
      summary: Update Staff Member
      description: Updates a staff member.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: staffId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      responses:
        '200':
          description: Staff member updated successfully
    delete:
      summary: Delete Staff Member
      description: Deletes a staff member.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: staffId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Staff member deleted successfully
  /staff/{subDomain}/{localId}/staff/{staffId}/performance:
    get:
      summary: Get Staff Performance
      description: Retrieves performance data for a staff member.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: staffId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Staff performance retrieved successfully
    put:
      summary: Update Staff Performance
      description: Updates performance data for a staff member.
      tags:
        - Staff Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
        - name: staffId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      responses:
        '200':
          description: Staff performance updated successfully
  /user-business/create:
    post:
      summary: Create User-Business Relationship
      description: Creates a relationship between a user and a business, assigning them a role.
      tags:
        - Staff Management
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              userId:
                type: string
              subDomain:
                type: string
      responses:
        '201':
          description: Relationship created successfully
  /menu-excel/import:
    post:
      summary: Menu Excel Import
      description: Imports menu data from Excel file.
      tags:
        - Additional Features
      consumes:
        - multipart/form-data
      responses:
        '200':
          description: Menu imported successfully
  /menu-parser/parse:
    post:
      summary: Menu Parser
      description: Parses menu data.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '200':
          description: Menu parsed successfully
  /integration-import/import:
    post:
      summary: Integration Import
      description: Imports data from external integrations.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '200':
          description: Data imported successfully
  /bot-ctx/context:
    get:
      summary: Get Bot Context
      description: Retrieves bot context information.
      tags:
        - Additional Features
      responses:
        '200':
          description: Bot context retrieved successfully
    post:
      summary: Create Bot Context
      description: Creates bot context information.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '201':
          description: Bot context created successfully
    patch:
      summary: Update Bot Context
      description: Updates bot context information.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '200':
          description: Bot context updated successfully
    delete:
      summary: Delete Bot Context
      description: Deletes bot context information.
      tags:
        - Additional Features
      responses:
        '204':
          description: Bot context deleted successfully
  /user-ctx/context:
    get:
      summary: Get User Context
      description: Retrieves user context information.
      tags:
        - Additional Features
      responses:
        '200':
          description: User context retrieved successfully
    post:
      summary: Create User Context
      description: Creates user context information.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '201':
          description: User context created successfully
    patch:
      summary: Update User Context
      description: Updates user context information.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '200':
          description: User context updated successfully
    delete:
      summary: Delete User Context
      description: Deletes user context information.
      tags:
        - Additional Features
      responses:
        '204':
          description: User context deleted successfully
  /combos:
    get:
      summary: Get Combos
      description: Retrieves all combos.
      tags:
        - Additional Features
      responses:
        '200':
          description: Combos retrieved successfully
    post:
      summary: Create Combo
      description: Creates a new combo.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '201':
          description: Combo created successfully
  /combos/{comboId}:
    patch:
      summary: Update Combo
      description: Updates an existing combo.
      tags:
        - Additional Features
      consumes:
        - application/json
      parameters:
        - name: comboId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Combo updated successfully
    delete:
      summary: Delete Combo
      description: Deletes a combo.
      tags:
        - Additional Features
      parameters:
        - name: comboId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Combo deleted successfully
  /history:
    get:
      summary: Get History
      description: Retrieves historical data.
      tags:
        - Additional Features
      responses:
        '200':
          description: History retrieved successfully
    post:
      summary: Create History Entry
      description: Creates a new history entry.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '201':
          description: History entry created successfully
  /health:
    get:
      summary: Health Check
      description: Checks the health status of the API.
      tags:
        - Additional Features
      responses:
        '200':
          description: API is healthy
  /logs:
    get:
      summary: Get Logs
      description: Retrieves system logs.
      tags:
        - Additional Features
      responses:
        '200':
          description: Logs retrieved successfully
    post:
      summary: Create Log Entry
      description: Creates a new log entry.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '201':
          description: Log entry created successfully
  /dashboard/metrics:
    get:
      summary: Get Metrics
      description: Retrieves dashboard metrics.
      tags:
        - Additional Features
      responses:
        '200':
          description: Metrics retrieved successfully
  /options:
    get:
      summary: Get Options
      description: Retrieves system options.
      tags:
        - Additional Features
      responses:
        '200':
          description: Options retrieved successfully
    post:
      summary: Create Option
      description: Creates a new system option.
      tags:
        - Additional Features
      consumes:
        - application/json
      responses:
        '201':
          description: Option created successfully
  /options/{optionId}:
    patch:
      summary: Update Option
      description: Updates an existing option.
      tags:
        - Additional Features
      consumes:
        - application/json
      parameters:
        - name: optionId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Option updated successfully
    delete:
      summary: Delete Option
      description: Deletes an option.
      tags:
        - Additional Features
      parameters:
        - name: optionId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Option deleted successfully
  /notifications/unread:
    get:
      summary: Get Unread Notifications
      description: Retrieves a list of unread notifications.
      tags:
        - Notifications
      responses:
        '200':
          description: Unread notifications retrieved successfully
  /notifications:
    get:
      summary: Get All Notifications
      description: Retrieves all notifications.
      tags:
        - Notifications
      security:
        - Bearer: []
      responses:
        '200':
          description: Notifications retrieved successfully
  /restaurant/facebook/rest/delivery/cargarCartaMenuEnLinea/{localId}/0:
    get:
      summary: Third-party Restaurant API
      description: An external endpoint for menu synchronization, used for third-party integrations.
      tags:
        - External Integration
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
        - name: localId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Menu data retrieved successfully
  /whatsapp-providers/health:
    get:
      summary: WhatsApp Service Health Check
      description: Checks the health status of the WhatsApp service.
      tags:
        - WhatsApp
      responses:
        '200':
          description: WhatsApp service is healthy
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots:
    post:
      summary: Create WhatsApp Bot
      description: Creates a new WhatsApp bot for a business.
      tags:
        - WhatsApp
        - Bot Management
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateBotRequest'
      responses:
        '200':
          description: WhatsApp bot created successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots/{botId}:
    get:
      summary: Get WhatsApp Bot
      description: Retrieves information about a specific WhatsApp bot.
      tags:
        - WhatsApp
        - Bot Management
      security:
        - Bearer: []
      parameters:
        - name: botId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Bot retrieved successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
        '404':
          description: Bot not found
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots/subdomain/{subDomain}:
    get:
      summary: Get Bot by Subdomain
      description: Retrieves a WhatsApp bot by business subdomain.
      tags:
        - WhatsApp
        - Bot Management
      security:
        - Bearer: []
      parameters:
        - name: subDomain
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Bot retrieved successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
        '404':
          description: Bot not found for subdomain
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots/{botId}/start:
    post:
      summary: Start WhatsApp Bot
      description: Starts a WhatsApp bot and returns QR code if needed for authentication.
      tags:
        - WhatsApp
        - Bot Management
      security:
        - Bearer: []
      parameters:
        - name: botId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Bot started successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots/{botId}/stop:
    post:
      summary: Stop WhatsApp Bot
      description: Stops a WhatsApp bot.
      tags:
        - WhatsApp
        - Bot Management
      security:
        - Bearer: []
      parameters:
        - name: botId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Bot stopped successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots/{botId}/status:
    get:
      summary: Get Bot Status
      description: Retrieves the current status of a WhatsApp bot.
      tags:
        - WhatsApp
        - Bot Management
      security:
        - Bearer: []
      parameters:
        - name: botId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Bot status retrieved successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots/{botId}/qr:
    get:
      summary: Get QR Code
      description: Retrieves the QR code for WhatsApp bot authentication.
      tags:
        - WhatsApp
        - Bot Management
      security:
        - Bearer: []
      parameters:
        - name: botId
          in: path
          required: true
          type: string
        - name: format
          in: query
          required: false
          type: string
          enum: ['raw', 'image']
          default: 'raw'
      responses:
        '200':
          description: QR code retrieved successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
        '404':
          description: Bot not found
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/send-message:
    post:
      summary: Send Message
      description: Sends a message through a WhatsApp bot.
      tags:
        - WhatsApp
        - Messaging
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendMessageRequest'
      responses:
        '200':
          description: Message sent successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/send-text:
    post:
      summary: Send Text Message
      description: Sends a simple text message through a WhatsApp bot.
      tags:
        - WhatsApp
        - Messaging
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendTextMessageRequest'
      responses:
        '200':
          description: Text message sent successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/send-welcome:
    post:
      summary: Send Welcome Message
      description: Sends a welcome message to a customer.
      tags:
        - WhatsApp
        - Messaging
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendWelcomeMessageRequest'
      responses:
        '200':
          description: Welcome message sent successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/webhook:
    post:
      summary: WhatsApp Webhook
      description: Webhook endpoint for receiving WhatsApp events from WAHA.
      tags:
        - WhatsApp
        - Webhooks
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/WebhookEvent'
      responses:
        '200':
          description: Webhook processed successfully
          schema:
            type: object
            properties:
              status:
                type: string
                example: 'ok'
  /whatsapp-providers/conversations/{sessionId}:
    get:
      summary: Get Conversation State
      description: Retrieves the current state of a conversation.
      tags:
        - WhatsApp
        - Conversation Management
      security:
        - Bearer: []
      parameters:
        - name: sessionId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Conversation state retrieved successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
        '404':
          description: Conversation state not found
          schema:
            $ref: '#/definitions/GeneralResponse'
    delete:
      summary: End Conversation
      description: Ends a conversation session.
      tags:
        - WhatsApp
        - Conversation Management
      security:
        - Bearer: []
      parameters:
        - name: sessionId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Conversation ended successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots/{botId}/conversations:
    get:
      summary: Get Active Conversations
      description: Retrieves all active conversations for a bot.
      tags:
        - WhatsApp
        - Conversation Management
      security:
        - Bearer: []
      parameters:
        - name: botId
          in: path
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
      responses:
        '200':
          description: Active conversations retrieved successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/conversations/{sessionId}/intent:
    put:
      summary: Update Conversation Intent
      description: Updates the intent and step of a conversation.
      tags:
        - WhatsApp
        - Conversation Management
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: sessionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateIntentRequest'
      responses:
        '200':
          description: Conversation intent updated successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
        '404':
          description: Conversation state not found
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/bots/{botId}/statistics:
    get:
      summary: Get Conversation Statistics
      description: Retrieves conversation statistics for a bot.
      tags:
        - WhatsApp
        - Conversation Management
      security:
        - Bearer: []
      parameters:
        - name: botId
          in: path
          required: true
          type: string
        - name: days
          in: query
          required: false
          type: integer
          default: 7
      responses:
        '200':
          description: Conversation statistics retrieved successfully
          schema:
            $ref: '#/definitions/GeneralResponse'
  /whatsapp-providers/conversations/{sessionId}/orders:
    post:
      summary: Create Order from Conversation
      description: Creates an order from a conversation session.
      tags:
        - WhatsApp
        - Order Management
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: sessionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/OrderItem'
              customer:
                $ref: '#/definitions/CustomerInfo'
              deliveryInfo:
                $ref: '#/definitions/DeliveryInfo'
              notes:
                type: string
                maxLength: 1000
              paymentMethod:
                type: string
                enum: ['cash', 'card', 'yape', 'plin', 'mercado_pago', 'bank_transfer']
      responses:
        '200':
          description: Order created successfully from conversation
          schema:
            type: object
            properties:
              type:
                type: string
                example: "1"
              message:
                type: string
                example: "Order created successfully from conversation"
              data:
                $ref: '#/definitions/Order'
  /whatsapp-providers/conversations/{sessionId}/order:
    get:
      summary: Get Conversation Order
      description: Retrieves the current order for a conversation session.
      tags:
        - WhatsApp
        - Order Management
      security:
        - Bearer: []
      parameters:
        - name: sessionId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Order retrieved successfully
          schema:
            type: object
            properties:
              type:
                type: string
                example: "1"
              message:
                type: string
                example: "Order retrieved successfully"
              data:
                $ref: '#/definitions/Order'
        '404':
          description: No active order found for this conversation
          schema:
            type: object
            properties:
              type:
                type: string
                example: "3"
              message:
                type: string
                example: "No active order found for this conversation"
              data:
                type: null
  /whatsapp-providers/bots/{botId}/orders:
    get:
      summary: Get Bot Orders
      description: Retrieves all orders for a specific bot.
      tags:
        - WhatsApp
        - Order Management
      security:
        - Bearer: []
      parameters:
        - name: botId
          in: path
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 50
          minimum: 1
          maximum: 100
        - name: status
          in: query
          required: false
          type: string
          enum: ['pending', 'confirmed', 'preparing', 'ready', 'dispatched', 'delivered', 'cancelled', 'rejected']
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
          minimum: 0
      responses:
        '200':
          description: Bot orders retrieved successfully
          schema:
            type: object
            properties:
              type:
                type: string
                example: "1"
              message:
                type: string
                example: "Bot orders retrieved successfully"
              data:
                type: array
                items:
                  $ref: '#/definitions/Order'
definitions:
  LoginResponse:
    type: object
    properties:
      type:
        type: string
      message:
        type: string
      data:
        type: object
        properties:
          accessToken:
            type: string
  GeneralResponse:
    type: object
    properties:
      type:
        type: string
      message:
        type: string
      data:
        type: object
  CreateBotRequest:
    type: object
    required:
      - name
      - phoneNumber
      - subDomain
    properties:
      name:
        type: string
        description: Name of the WhatsApp bot
      phoneNumber:
        type: string
        description: Phone number for the WhatsApp bot
        pattern: '^[\+]?[0-9\s\-\(\)]{7,15}$'
      subDomain:
        type: string
        description: Business subdomain
      localId:
        type: string
        description: Local/branch ID
      configuration:
        type: object
        properties:
          autoReply:
            type: boolean
            default: true
          businessHours:
            type: object
            properties:
              enabled:
                type: boolean
                default: true
              schedule:
                type: object
          welcomeMessage:
            type: string
            default: '¡Hola! Bienvenido a nuestro restaurante. ¿En qué puedo ayudarte?'
          offlineMessage:
            type: string
            default: 'Estamos cerrados en este momento. Te responderemos pronto.'
          language:
            type: string
            enum: ['es', 'en', 'pt']
            default: 'es'
          features:
            type: object
            properties:
              menuSharing:
                type: boolean
                default: true
              orderTracking:
                type: boolean
                default: true
              paymentLinks:
                type: boolean
                default: false
              promotions:
                type: boolean
                default: true
              customerSupport:
                type: boolean
                default: true
          integrations:
            type: object
            properties:
              cartaAI:
                type: boolean
                default: false
              pos:
                type: boolean
                default: false
              delivery:
                type: boolean
                default: false
  SendMessageRequest:
    type: object
    required:
      - botId
      - to
      - message
    properties:
      botId:
        type: string
        description: ID of the WhatsApp bot
      to:
        type: string
        description: Recipient phone number
      message:
        type: object
        properties:
          to:
            type: string
          type:
            type: string
            enum: ['text', 'image', 'audio', 'video', 'document', 'location', 'contact', 'interactive', 'template']
          text:
            type: string
          media:
            type: object
            properties:
              url:
                type: string
              filename:
                type: string
              mimetype:
                type: string
          location:
            type: object
            properties:
              latitude:
                type: number
              longitude:
                type: number
              name:
                type: string
              address:
                type: string
          contact:
            type: object
            properties:
              name:
                type: string
              phone:
                type: string
          interactive:
            type: object
            properties:
              type:
                type: string
                enum: ['button', 'list', 'product', 'product_list']
              header:
                type: object
                properties:
                  type:
                    type: string
                    enum: ['text', 'image', 'video']
                  content:
                    type: string
              body:
                type: string
              footer:
                type: string
              action:
                type: object
                properties:
                  buttons:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                  sections:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        rows:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              title:
                                type: string
                              description:
                                type: string
          template:
            type: object
            properties:
              name:
                type: string
              language:
                type: string
              components:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: ['header', 'body', 'footer', 'button']
                    parameters:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            enum: ['text', 'currency', 'date_time', 'image', 'document']
                          text:
                            type: string
                          currency:
                            type: object
                            properties:
                              fallback_value:
                                type: string
                              code:
                                type: string
                              amount_1000:
                                type: number
                          date_time:
                            type: object
                            properties:
                              fallback_value:
                                type: string
                          image:
                            type: object
                            properties:
                              link:
                                type: string
                          document:
                            type: object
                            properties:
                              link:
                                type: string
                              filename:
                                type: string
  SendTextMessageRequest:
    type: object
    required:
      - botId
      - to
      - text
    properties:
      botId:
        type: string
        description: ID of the WhatsApp bot
      to:
        type: string
        description: Recipient phone number
      text:
        type: string
        description: Text message content
  SendWelcomeMessageRequest:
    type: object
    required:
      - botId
      - to
    properties:
      botId:
        type: string
        description: ID of the WhatsApp bot
      to:
        type: string
        description: Recipient phone number
  UpdateIntentRequest:
    type: object
    required:
      - intent
    properties:
      intent:
        type: string
        enum: ['menu', 'order', 'support', 'info', 'payment', 'delivery', 'idle']
        description: New conversation intent
      step:
        type: string
        description: New conversation step
  WebhookEvent:
    type: object
    properties:
      event:
        type: string
        enum: ['session.status', 'message']
        description: Type of webhook event
      session:
        type: string
        description: WAHA session name
      payload:
        type: object
        description: Event payload data
      timestamp:
        type: number
        description: Event timestamp
      me:
        type: object
        properties:
          id:
            type: string
          pushName:
            type: string
      environment:
        type: object
        properties:
          version:
            type: string
          engine:
            type: string
          tier:
            type: string
  OrderModifierOption:
    type: object
    required:
      - optionId
      - name
      - price
      - quantity
    properties:
      optionId:
        type: string
        description: Unique identifier for the modifier option
      name:
        type: string
        maxLength: 100
        description: Name of the modifier option
      price:
        type: number
        minimum: 0
        description: Price of the modifier option
      quantity:
        type: integer
        minimum: 1
        default: 1
        description: Quantity of the modifier option
  OrderModifier:
    type: object
    required:
      - modifierId
      - name
      - options
    properties:
      modifierId:
        type: string
        description: Unique identifier for the modifier
      name:
        type: string
        maxLength: 100
        description: Name of the modifier
      options:
        type: array
        items:
          $ref: '#/definitions/OrderModifierOption'
        description: List of modifier options
  OrderItem:
    type: object
    required:
      - id
      - productId
      - name
      - quantity
      - unitPrice
      - totalPrice
    properties:
      id:
        type: string
        description: Unique identifier for the order item
      productId:
        type: string
        description: Reference to the product
      presentationId:
        type: string
        description: Reference to the product presentation
      name:
        type: string
        maxLength: 200
        description: Name of the product
      description:
        type: string
        maxLength: 500
        description: Description of the product
      quantity:
        type: integer
        minimum: 1
        description: Quantity ordered
      unitPrice:
        type: number
        minimum: 0
        description: Price per unit
      totalPrice:
        type: number
        minimum: 0
        description: Total price for this item (including modifiers)
      modifiers:
        type: array
        items:
          $ref: '#/definitions/OrderModifier'
        description: List of modifiers for this item
      notes:
        type: string
        maxLength: 500
        description: Special notes for this item
      imageUrl:
        type: string
        format: uri
        description: URL of the product image
  CustomerInfo:
    type: object
    required:
      - name
      - phone
    properties:
      name:
        type: string
        maxLength: 100
        description: Customer name
      phone:
        type: string
        pattern: '^[\+]?[0-9\s\-\(\)]{7,15}$'
        description: Customer phone number
      email:
        type: string
        format: email
        description: Customer email address
      address:
        type: object
        properties:
          street:
            type: string
            maxLength: 200
            description: Street address
          city:
            type: string
            maxLength: 100
            description: City
          state:
            type: string
            maxLength: 100
            description: State/Province
          zipCode:
            type: string
            maxLength: 20
            description: ZIP/Postal code
          country:
            type: string
            maxLength: 100
            description: Country
          coordinates:
            type: object
            properties:
              latitude:
                type: number
                minimum: -90
                maximum: 90
                description: Latitude coordinate
              longitude:
                type: number
                minimum: -180
                maximum: 180
                description: Longitude coordinate
      customerId:
        type: string
        description: Customer ID reference
      loyaltyPoints:
        type: number
        minimum: 0
        default: 0
        description: Customer loyalty points
  DeliveryInfo:
    type: object
    required:
      - address
      - estimatedTime
    properties:
      address:
        type: object
        required:
          - street
          - city
          - state
          - zipCode
          - country
        properties:
          street:
            type: string
            maxLength: 200
            description: Delivery street address
          city:
            type: string
            maxLength: 100
            description: Delivery city
          state:
            type: string
            maxLength: 100
            description: Delivery state/province
          zipCode:
            type: string
            maxLength: 20
            description: Delivery ZIP/postal code
          country:
            type: string
            maxLength: 100
            description: Delivery country
          coordinates:
            type: object
            properties:
              latitude:
                type: number
                minimum: -90
                maximum: 90
              longitude:
                type: number
                minimum: -180
                maximum: 180
      coordinates:
        type: object
        properties:
          latitude:
            type: number
            minimum: -90
            maximum: 90
            description: Delivery latitude
          longitude:
            type: number
            minimum: -180
            maximum: 180
            description: Delivery longitude
      deliveryInstructions:
        type: string
        maxLength: 500
        description: Special delivery instructions
      estimatedTime:
        type: number
        minimum: 0
        description: Estimated delivery time in minutes
      assignedDriver:
        type: object
        properties:
          id:
            type: string
            description: Driver ID
          name:
            type: string
            maxLength: 100
            description: Driver name
          phone:
            type: string
            pattern: '^[\+]?[0-9\s\-\(\)]{7,15}$'
            description: Driver phone number
      deliveryCompany:
        type: object
        properties:
          id:
            type: string
            description: Delivery company ID
          name:
            type: string
            maxLength: 100
            description: Delivery company name
  Order:
    type: object
    required:
      - orderNumber
      - customer
      - items
      - subtotal
      - tax
      - deliveryFee
      - discount
      - total
      - status
      - type
      - paymentMethod
      - paymentStatus
      - source
      - localId
      - subDomain
    properties:
      orderNumber:
        type: string
        description: Unique order number
        example: "ORD1703123456ABC12"
      customer:
        $ref: '#/definitions/CustomerInfo'
      items:
        type: array
        items:
          $ref: '#/definitions/OrderItem'
        description: List of items in the order
      subtotal:
        type: number
        minimum: 0
        description: Subtotal before tax and fees
      tax:
        type: number
        minimum: 0
        default: 0
        description: Tax amount
      deliveryFee:
        type: number
        minimum: 0
        default: 0
        description: Delivery fee
      discount:
        type: number
        minimum: 0
        default: 0
        description: Discount amount
      total:
        type: number
        minimum: 0
        description: Total order amount
      status:
        type: string
        enum: ['pending', 'confirmed', 'preparing', 'ready', 'dispatched', 'delivered', 'cancelled', 'rejected']
        default: 'pending'
        description: Current order status
      type:
        type: string
        enum: ['delivery', 'pickup', 'on_site', 'scheduled_delivery', 'scheduled_pickup']
        description: Order type
      paymentMethod:
        type: string
        enum: ['cash', 'card', 'yape', 'plin', 'mercado_pago', 'bank_transfer']
        description: Payment method
      paymentStatus:
        type: string
        enum: ['pending', 'paid', 'failed', 'refunded', 'partial']
        default: 'pending'
        description: Payment status
      source:
        type: string
        enum: ['digital_menu', 'whatsapp', 'phone', 'pos', 'website']
        description: Order source
      estimatedDeliveryTime:
        type: string
        format: date-time
        description: Estimated delivery time
      actualDeliveryTime:
        type: string
        format: date-time
        description: Actual delivery time
      notes:
        type: string
        maxLength: 1000
        description: Order notes
      deliveryInfo:
        $ref: '#/definitions/DeliveryInfo'
      localId:
        type: string
        description: Local/branch ID
      subDomain:
        type: string
        description: Business subdomain
      conversationId:
        type: string
        description: WhatsApp conversation ID reference
      botId:
        type: string
        description: WhatsApp bot ID reference
      createdAt:
        type: string
        format: date-time
        description: Order creation timestamp
      updatedAt:
        type: string
        format: date-time
        description: Order last update timestamp
  UpdateOrderStatusRequest:
    type: object
    required:
      - status
    properties:
      status:
        type: string
        enum: ['pending', 'confirmed', 'preparing', 'ready', 'dispatched', 'delivered', 'cancelled', 'rejected']
        description: New order status
      statusReason:
        type: string
        description: Reason for status change
      estimatedDeliveryTime:
        type: string
        format: date-time
        description: Updated estimated delivery time
      actualDeliveryTime:
        type: string
        format: date-time
        description: Actual delivery time
      assignedDriver:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          phone:
            type: string
      deliveryCompany:
        type: object
        properties:
          id:
            type: string
          name:
            type: string